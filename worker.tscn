[gd_scene load_steps=15 format=3 uid="uid://cdvsch0swdahw"]

[ext_resource type="Script" path="res://worker.gd" id="1_sph55"]
[ext_resource type="Texture2D" uid="uid://ckaoiw0m318a5" path="res://Desk.png" id="1_yfskb"]

[sub_resource type="Animation" id="Animation_dywcw"]
length = 2.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:visible_ratio")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(1, 2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../RichTextLabel2:visible_ratio")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_xyuij"]
resource_name = "text"
length = 2.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:visible_ratio")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1, 2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 1.0, 1.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../RichTextLabel2:visible_ratio")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1, 2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 1.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_x7un6"]
_data = {
"RESET": SubResource("Animation_dywcw"),
"text": SubResource("Animation_xyuij")
}

[sub_resource type="AtlasTexture" id="AtlasTexture_lxgdo"]
atlas = ExtResource("1_yfskb")
region = Rect2(0, 0, 1984, 1984)

[sub_resource type="AtlasTexture" id="AtlasTexture_rmeus"]
atlas = ExtResource("1_yfskb")
region = Rect2(1984, 0, 1984, 1984)

[sub_resource type="AtlasTexture" id="AtlasTexture_2g76v"]
atlas = ExtResource("1_yfskb")
region = Rect2(0, 1984, 1984, 1984)

[sub_resource type="AtlasTexture" id="AtlasTexture_m5yuh"]
atlas = ExtResource("1_yfskb")
region = Rect2(1984, 1984, 1984, 1984)

[sub_resource type="SpriteFrames" id="SpriteFrames_00gmp"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_lxgdo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rmeus")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2g76v")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_m5yuh")
}],
"loop": true,
"name": &"typing",
"speed": 5.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_np8u6"]
radius = 53.0
height = 180.0

[sub_resource type="Animation" id="Animation_xa8ni"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_fcjjq"]
resource_name = "flicker"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:color")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4, 0.5, 0.6, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0.0117647), Color(1, 1, 1, 0.878431), Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_jeiqa"]
_data = {
"RESET": SubResource("Animation_xa8ni"),
"flicker": SubResource("Animation_fcjjq")
}

[node name="Worker" type="CharacterBody2D"]
script = ExtResource("1_sph55")

[node name="RichTextLabel" type="RichTextLabel" parent="."]
offset_left = 106.0
offset_top = 60.0
offset_right = 251.0
offset_bottom = 267.0
theme_override_colors/default_color = Color(0.533333, 0.533333, 0.533333, 1)
theme_override_font_sizes/normal_font_size = 6
text = "text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)
text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
python3


$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
import wikipedia 

# finding result for the search
# sentences = 2 refers to numbers of line

result = wikipedia.summary(\"India\", sentences = 2) 

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
"
scroll_active = false
visible_characters = 0
visible_characters_behavior = 1
visible_ratio = 0.0

[node name="TextAnimationPlayer" type="AnimationPlayer" parent="RichTextLabel"]
autoplay = "text"
libraries = {
"": SubResource("AnimationLibrary_x7un6")
}

[node name="RichTextLabel2" type="RichTextLabel" parent="."]
offset_left = 106.0
offset_top = 60.0
offset_right = 251.0
offset_bottom = 267.0
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_font_sizes/normal_font_size = 6
text = "text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)
text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
python3


$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
import wikipedia 

# finding result for the search
# sentences = 2 refers to numbers of line

result = wikipedia.summary(\"India\", sentences = 2) 

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
"
scroll_active = false
visible_characters = 0
visible_characters_behavior = 1
visible_ratio = 0.0

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(170, 167)
scale = Vector2(0.170363, 0.170363)
sprite_frames = SubResource("SpriteFrames_00gmp")
animation = &"typing"
autoplay = "typing"
frame_progress = 0.752743

[node name="Polygon2D" type="Polygon2D" parent="."]
modulate = Color(1, 1, 1, 0.368627)
polygon = PackedVector2Array(164, 106, 137, 127, 138, 152, 160, 153, 195, 140, 184, 122, 180, 103)

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(178, 169)
shape = SubResource("CapsuleShape2D_np8u6")

[node name="WorkerButton" type="Button" parent="CollisionShape2D"]
offset_left = -52.0
offset_top = -88.0
offset_right = 51.0
offset_bottom = 88.0

[node name="TaskQueue" type="TextEdit" parent="."]
offset_left = 112.0
offset_top = 260.0
offset_right = 253.0
offset_bottom = 302.0
text = "Task Queue: 0"

[node name="Timer" type="Timer" parent="."]
wait_time = 4.0
autostart = true

[node name="ColorRect" type="ColorRect" parent="."]
offset_left = 138.0
offset_top = 126.0
offset_right = 160.0
offset_bottom = 152.0
color = Color(1, 1, 1, 0)

[node name="AnimationPlayer" type="AnimationPlayer" parent="ColorRect"]
autoplay = "flicker"
libraries = {
"": SubResource("AnimationLibrary_jeiqa")
}

[connection signal="pressed" from="CollisionShape2D/WorkerButton" to="." method="_on_worker_button_pressed"]
[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
