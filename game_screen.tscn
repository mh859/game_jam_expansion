[gd_scene load_steps=22 format=3 uid="uid://detq41mfbn72b"]

[ext_resource type="PackedScene" uid="uid://cdvsch0swdahw" path="res://worker.tscn" id="1_8ewb7"]
[ext_resource type="Shader" path="res://shader/lcd.gdshader" id="1_cfb8i"]
[ext_resource type="Script" path="res://game_screen.gd" id="1_nc8ki"]
[ext_resource type="Texture2D" uid="uid://b7w6mjn4duyka" path="res://window.png" id="2_i5vpn"]
[ext_resource type="Texture2D" uid="uid://qkb238v0o4fq" path="res://pizza.tres" id="2_iib6v"]
[ext_resource type="Script" path="res://end_screen.gd" id="5_erkry"]
[ext_resource type="Shader" path="res://shader/crt.gdshader" id="7_wsabt"]

[sub_resource type="Theme" id="Theme_afaqf"]
Label/colors/font_color = Color(0, 0, 0, 1)
Label/font_sizes/font_size = 23

[sub_resource type="Animation" id="Animation_dywcw"]
length = 2.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:visible_ratio")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(1, 2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../RichTextLabel2:visible_ratio")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_xyuij"]
resource_name = "text"
length = 2.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:visible_ratio")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1, 2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 1.0, 1.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../RichTextLabel2:visible_ratio")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1, 2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 1.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_x7un6"]
_data = {
"RESET": SubResource("Animation_dywcw"),
"text": SubResource("Animation_xyuij")
}

[sub_resource type="AtlasTexture" id="AtlasTexture_2gegk"]
atlas = ExtResource("2_i5vpn")
region = Rect2(0, 0, 1984, 1984)

[sub_resource type="AtlasTexture" id="AtlasTexture_k10di"]
atlas = ExtResource("2_i5vpn")
region = Rect2(1984, 0, 1984, 1984)

[sub_resource type="AtlasTexture" id="AtlasTexture_22kaq"]
atlas = ExtResource("2_i5vpn")
region = Rect2(3968, 0, 1984, 1984)

[sub_resource type="AtlasTexture" id="AtlasTexture_736u1"]
atlas = ExtResource("2_i5vpn")
region = Rect2(0, 1984, 1984, 1984)

[sub_resource type="AtlasTexture" id="AtlasTexture_rq42u"]
atlas = ExtResource("2_i5vpn")
region = Rect2(1984, 1984, 1984, 1984)

[sub_resource type="AtlasTexture" id="AtlasTexture_lb6mu"]
atlas = ExtResource("2_i5vpn")
region = Rect2(3968, 1984, 1984, 1984)

[sub_resource type="SpriteFrames" id="SpriteFrames_ikguw"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_2gegk")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_k10di")
}, {
"duration": 1.3,
"texture": SubResource("AtlasTexture_22kaq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_736u1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rq42u")
}, {
"duration": 5.0,
"texture": SubResource("AtlasTexture_lb6mu")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1bb38"]
shader = ExtResource("1_cfb8i")
shader_parameter/stripe = 0.5
shader_parameter/scan = 0.5

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0wxqu"]
shader = ExtResource("7_wsabt")

[sub_resource type="QuadMesh" id="QuadMesh_f1ndw"]
size = Vector2(1152, 648)

[node name="GameScreen" type="Node2D"]
position = Vector2(4, -5)
script = ExtResource("1_nc8ki")

[node name="bckground" type="ColorRect" parent="."]
offset_left = -17.0
offset_right = 1154.0
offset_bottom = 653.0
color = Color(0, 0, 0, 1)

[node name="PerformancePanel" type="ColorRect" parent="bckground"]
layout_mode = 0
offset_left = 771.0
offset_top = 2.0
offset_right = 1177.0
offset_bottom = 651.0
color = Color(0.803922, 0.803922, 0.803922, 1)

[node name="Label" type="Label" parent="bckground/PerformancePanel"]
layout_mode = 0
offset_left = 20.0
offset_top = 33.0
offset_right = 339.0
offset_bottom = 78.0
theme = SubResource("Theme_afaqf")
theme_override_font_sizes/font_size = 30
text = "Performance Metrics: "

[node name="VBoxContainer" type="VBoxContainer" parent="bckground/PerformancePanel"]
custom_minimum_size = Vector2(2.08165e-12, 500)
layout_mode = 0
offset_left = 23.0
offset_top = 83.0
offset_right = 295.0
offset_bottom = 609.0
theme_override_constants/separation = 27

[node name="ToDo" type="Label" parent="bckground/PerformancePanel/VBoxContainer"]
layout_mode = 2
theme = SubResource("Theme_afaqf")
text = "Things To Do: 0"

[node name="Label" type="Label" parent="bckground/PerformancePanel/VBoxContainer/ToDo"]
layout_mode = 0
offset_left = 4.0
offset_top = 29.0
offset_right = 131.0
offset_bottom = 61.0
theme_override_font_sizes/font_size = 14
text = "always increasing"

[node name="LinesOfCode" type="Label" parent="bckground/PerformancePanel/VBoxContainer"]
layout_mode = 2
theme = SubResource("Theme_afaqf")
text = "Lines of Code: 0"

[node name="Label" type="Label" parent="bckground/PerformancePanel/VBoxContainer/LinesOfCode"]
layout_mode = 0
offset_left = 2.0
offset_top = 28.0
offset_right = 144.0
offset_bottom = 60.0
theme_override_font_sizes/font_size = 14
text = "the more the better"

[node name="TechDebt" type="Label" parent="bckground/PerformancePanel/VBoxContainer"]
layout_mode = 2
theme = SubResource("Theme_afaqf")
text = "Tech Debt: 0"

[node name="Label" type="Label" parent="bckground/PerformancePanel/VBoxContainer/TechDebt"]
layout_mode = 0
offset_left = 2.0
offset_top = 28.0
offset_right = 271.0
offset_bottom = 60.0
theme_override_font_sizes/font_size = 14
text = "slows task completion and decreases morale"

[node name="EmployeeMorale" type="Label" parent="bckground/PerformancePanel/VBoxContainer"]
layout_mode = 2
theme = SubResource("Theme_afaqf")
text = "Employee Morale: GOOD"

[node name="Label" type="Label" parent="bckground/PerformancePanel/VBoxContainer/EmployeeMorale"]
layout_mode = 0
offset_left = 2.0
offset_top = 30.0
offset_right = 322.0
offset_bottom = 76.0
theme_override_constants/line_spacing = 1
theme_override_font_sizes/font_size = 12
text = "the better the morale, the less tech debt.
if this stays 'TERRIBLE\" for too long, employees will quit"

[node name="Money" type="Label" parent="bckground/PerformancePanel/VBoxContainer"]
layout_mode = 2
theme = SubResource("Theme_afaqf")
text = "Money: $0"

[node name="Label" type="Label" parent="bckground/PerformancePanel/VBoxContainer/Money"]
layout_mode = 0
offset_top = 27.0
offset_right = 208.0
offset_bottom = 59.0
theme_override_font_sizes/font_size = 14
text = "+ $100 per task completed "

[node name="VBoxContainer" type="VBoxContainer" parent="bckground/PerformancePanel/VBoxContainer"]
layout_mode = 2

[node name="VBoxContainer2" type="VBoxContainer" parent="bckground/PerformancePanel/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 8
theme_override_constants/separation = 10

[node name="HBoxContainer" type="HBoxContainer" parent="bckground/PerformancePanel/VBoxContainer/VBoxContainer2"]
layout_mode = 2

[node name="NewHire" type="Button" parent="bckground/PerformancePanel/VBoxContainer/VBoxContainer2/HBoxContainer"]
custom_minimum_size = Vector2(200, 2.08165e-12)
layout_mode = 2
size_flags_stretch_ratio = 0.0
disabled = true
text = "NEW HIRE
$150,000"

[node name="Label" type="Label" parent="bckground/PerformancePanel/VBoxContainer/VBoxContainer2/HBoxContainer/NewHire"]
layout_mode = 2
offset_left = 210.0
offset_top = 5.0
offset_right = 482.0
offset_bottom = 25.0
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 11
text = "++ coding speed"

[node name="HBoxContainer2" type="HBoxContainer" parent="bckground/PerformancePanel/VBoxContainer/VBoxContainer2"]
custom_minimum_size = Vector2(200, 2.08165e-12)
layout_mode = 2

[node name="IntegrateAI" type="Button" parent="bckground/PerformancePanel/VBoxContainer/VBoxContainer2/HBoxContainer2"]
custom_minimum_size = Vector2(200, 2.08165e-12)
layout_mode = 2
disabled = true
text = "INTEGRATE AI
$1,000"

[node name="Label" type="Label" parent="bckground/PerformancePanel/VBoxContainer/VBoxContainer2/HBoxContainer2/IntegrateAI"]
layout_mode = 0
offset_left = 211.0
offset_right = 304.0
offset_bottom = 40.0
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 11
text = "+ coding speed
+ tech debt"

[node name="HBoxContainer3" type="HBoxContainer" parent="bckground/PerformancePanel/VBoxContainer/VBoxContainer2"]
layout_mode = 2

[node name="PizzaParty" type="Button" parent="bckground/PerformancePanel/VBoxContainer/VBoxContainer2/HBoxContainer3"]
custom_minimum_size = Vector2(200, 2.08165e-12)
layout_mode = 2
disabled = true
text = "PIZZA PARTY
$500"

[node name="Label" type="Label" parent="bckground/PerformancePanel/VBoxContainer/VBoxContainer2/HBoxContainer3/PizzaParty"]
layout_mode = 0
offset_left = 216.0
offset_right = 313.0
offset_bottom = 40.0
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 11
text = "++ morale
reset task queue"

[node name="AI1" type="Control" parent="bckground"]
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="RichTextLabel" type="RichTextLabel" parent="bckground/AI1"]
layout_mode = 0
offset_left = 11.0
offset_top = 15.0
offset_right = 725.0
offset_bottom = 630.0
theme_override_colors/default_color = Color(0.270588, 0.270588, 0.270588, 1)
theme_override_font_sizes/normal_font_size = 20
text = "text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)
text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
python3


$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
import wikipedia 

# finding result for the search
# sentences = 2 refers to numbers of line

result = wikipedia.summary(\"India\", sentences = 2) 

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
"
scroll_active = false
visible_characters = 0
visible_characters_behavior = 1
visible_ratio = 0.0

[node name="AI1AnimationPlayer" type="AnimationPlayer" parent="bckground/AI1/RichTextLabel"]
libraries = {
"": SubResource("AnimationLibrary_x7un6")
}

[node name="RichTextLabel2" type="RichTextLabel" parent="bckground/AI1"]
layout_mode = 0
offset_left = 11.0
offset_top = 15.0
offset_right = 725.0
offset_bottom = 630.0
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_font_sizes/normal_font_size = 20
text = "text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)
text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
python3


$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
import wikipedia 

# finding result for the search
# sentences = 2 refers to numbers of line

result = wikipedia.summary(\"India\", sentences = 2) 

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
"
scroll_active = false
visible_characters = 0
visible_characters_behavior = 1
visible_ratio = 0.0

[node name="AI2" type="Control" parent="bckground"]
anchors_preset = 0
offset_left = 175.0
offset_top = 47.0
offset_right = 215.0
offset_bottom = 87.0

[node name="RichTextLabel" type="RichTextLabel" parent="bckground/AI2"]
layout_mode = 0
offset_left = 11.0
offset_top = 15.0
offset_right = 725.0
offset_bottom = 630.0
mouse_filter = 2
theme_override_colors/default_color = Color(0.270588, 0.270588, 0.270588, 1)
theme_override_font_sizes/normal_font_size = 35
text = "text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)
text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
python3


$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
import wikipedia 

# finding result for the search
# sentences = 2 refers to numbers of line

result = wikipedia.summary(\"India\", sentences = 2) 

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
"
scroll_active = false
visible_characters = 0
visible_characters_behavior = 1
visible_ratio = 0.0

[node name="AI2AnimationPlayer" type="AnimationPlayer" parent="bckground/AI2/RichTextLabel"]
libraries = {
"": SubResource("AnimationLibrary_x7un6")
}

[node name="RichTextLabel2" type="RichTextLabel" parent="bckground/AI2"]
layout_mode = 0
offset_left = 11.0
offset_top = 15.0
offset_right = 725.0
offset_bottom = 630.0
mouse_filter = 2
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_font_sizes/normal_font_size = 35
text = "text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)
text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
python3


$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
import wikipedia 

# finding result for the search
# sentences = 2 refers to numbers of line

result = wikipedia.summary(\"India\", sentences = 2) 

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
"
scroll_active = false
visible_characters = 0
visible_characters_behavior = 1
visible_ratio = 0.0

[node name="AI3" type="Control" parent="bckground"]
anchors_preset = 0
offset_left = 106.0
offset_top = 165.0
offset_right = 146.0
offset_bottom = 205.0

[node name="RichTextLabel" type="RichTextLabel" parent="bckground/AI3"]
layout_mode = 0
offset_left = 11.0
offset_top = 15.0
offset_right = 978.0
offset_bottom = 630.0
mouse_filter = 2
theme_override_colors/default_color = Color(0.270588, 0.270588, 0.270588, 1)
theme_override_font_sizes/normal_font_size = 50
text = "text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)
text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
python3


$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
import wikipedia 

# finding result for the search
# sentences = 2 refers to numbers of line

result = wikipedia.summary(\"India\", sentences = 2) 

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
"
scroll_active = false
visible_characters = 0
visible_characters_behavior = 1
visible_ratio = 0.0

[node name="AI3AnimationPlayer" type="AnimationPlayer" parent="bckground/AI3/RichTextLabel"]
libraries = {
"": SubResource("AnimationLibrary_x7un6")
}

[node name="RichTextLabel2" type="RichTextLabel" parent="bckground/AI3"]
layout_mode = 0
offset_left = 11.0
offset_top = 15.0
offset_right = 978.0
offset_bottom = 630.0
mouse_filter = 2
theme_override_colors/default_color = Color(0, 0, 0, 1)
theme_override_font_sizes/normal_font_size = 50
text = "text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)
text: str = input('Type a number, and its factorial will be printed: ')
n: int = int(text)

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
python3


$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
import wikipedia 

# finding result for the search
# sentences = 2 refers to numbers of line

result = wikipedia.summary(\"India\", sentences = 2) 

if n < 0:
    raise ValueError('You must enter a non-negative integer')

factorial: int = 1
for i in range(2, n + 1):
    factorial *= i

print(factorial)


$ pip install -r requirements.txt
$ bash runtests  # will run tests for python and 
$ python -m unittest discover tests/ '*test.py'  # manual style

# importing the module
"
scroll_active = false
visible_characters = 0
visible_characters_behavior = 1
visible_ratio = 0.0

[node name="Pizza Party" type="Control" parent="bckground"]
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="Pizza" type="CPUParticles2D" parent="bckground/Pizza Party"]
position = Vector2(389, 28)
emitting = false
amount = 15
one_shot = true
speed_scale = 2.0
texture = ExtResource("2_iib6v")
emission_shape = 3
emission_rect_extents = Vector2(350, 10)
direction = Vector2(1, 1)
spread = 179.1
angle_min = -334.5
angle_max = 123.6
scale_amount_max = 3.0
color = Color(1, 1, 1, 0.556863)

[node name="Worker" parent="." instance=ExtResource("1_8ewb7")]
position = Vector2(-53, 311)

[node name="Window" type="AnimatedSprite2D" parent="."]
modulate = Color(1, 1, 1, 0.686275)
position = Vector2(629, 169)
scale = Vector2(0.175403, 0.175403)
sprite_frames = SubResource("SpriteFrames_ikguw")
autoplay = "default"
frame = 1
frame_progress = 0.951982

[node name="Timer" type="Timer" parent="."]
autostart = true

[node name="Worker2" parent="." instance=ExtResource("1_8ewb7")]
position = Vector2(127, 310)

[node name="Worker3" parent="." instance=ExtResource("1_8ewb7")]
position = Vector2(313, 310)

[node name="Worker4" parent="." instance=ExtResource("1_8ewb7")]
visible = false
position = Vector2(498, 310)

[node name="Worker5" parent="." instance=ExtResource("1_8ewb7")]
visible = false
position = Vector2(-52, 82)

[node name="Worker6" parent="." instance=ExtResource("1_8ewb7")]
visible = false
position = Vector2(124, 81)

[node name="Worker7" parent="." instance=ExtResource("1_8ewb7")]
visible = false
position = Vector2(316, 80)

[node name="UI" type="CanvasLayer" parent="."]
visible = false

[node name="end_screen" type="Node2D" parent="UI"]
script = ExtResource("5_erkry")

[node name="ColorRect" type="ColorRect" parent="UI/end_screen"]
offset_left = 302.0
offset_top = 170.0
offset_right = 858.0
offset_bottom = 449.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 4
size_flags_vertical = 4
mouse_filter = 2
color = Color(0, 0, 0, 1)
metadata/_edit_use_anchors_ = true

[node name="Label" type="Label" parent="UI/end_screen/ColorRect"]
layout_mode = 0
offset_left = 35.0
offset_top = 22.0
offset_right = 523.0
offset_bottom = 225.0
theme_override_font_sizes/font_size = 18
text = "To keep up with the unreasonable amount of tasks, you opted to offload decision making and design to AI and now your codebase is unreadable and riddled with tech debt. 
All your engineers quit but at least you can call yourself a trendy AI startup and catch the eye of investors. So worth it. The End."
autowrap_mode = 3

[node name="Restart" type="Button" parent="UI/end_screen/ColorRect"]
layout_mode = 0
offset_left = 230.0
offset_top = 228.0
offset_right = 327.0
offset_bottom = 276.0
text = "Try Again?"

[node name="MoraleTimer" type="Timer" parent="."]
wait_time = 3.0

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
modulate = Color(1, 1, 1, 0.0588235)
self_modulate = Color(1, 1, 1, 0.0156863)
material = SubResource("ShaderMaterial_1bb38")
offset_right = 1157.0
offset_bottom = 652.0
mouse_filter = 2
color = Color(0.4, 0.380392, 0, 0.356863)

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="MeshInstance2D" type="MeshInstance2D" parent="CanvasLayer"]
material = SubResource("ShaderMaterial_0wxqu")
position = Vector2(576.5, 323.5)
scale = Vector2(1.00608, 1.01389)
mesh = SubResource("QuadMesh_f1ndw")

[connection signal="tech_debt_stress" from="." to="Worker" method="_on_game_screen_tech_debt_stress"]
[connection signal="pressed" from="bckground/PerformancePanel/VBoxContainer/VBoxContainer2/HBoxContainer/NewHire" to="." method="_on_new_hire_pressed"]
[connection signal="pressed" from="bckground/PerformancePanel/VBoxContainer/VBoxContainer2/HBoxContainer2/IntegrateAI" to="." method="_on_integrate_ai_pressed"]
[connection signal="pressed" from="bckground/PerformancePanel/VBoxContainer/VBoxContainer2/HBoxContainer3/PizzaParty" to="." method="_on_pizza_party_pressed"]
[connection signal="finished_task" from="Worker" to="." method="_on_worker_finished_task"]
[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
[connection signal="finished_task" from="Worker2" to="." method="_on_worker_2_finished_task"]
[connection signal="finished_task" from="Worker3" to="." method="_on_worker_3_finished_task"]
[connection signal="finished_task" from="Worker4" to="." method="_on_worker_4_finished_task"]
[connection signal="finished_task" from="Worker5" to="." method="_on_worker_5_finished_task"]
[connection signal="finished_task" from="Worker6" to="." method="_on_worker_6_finished_task"]
[connection signal="finished_task" from="Worker7" to="." method="_on_worker_7_finished_task"]
[connection signal="pressed" from="UI/end_screen/ColorRect/Restart" to="UI/end_screen" method="_on_restart_pressed"]
[connection signal="timeout" from="MoraleTimer" to="." method="_on_morale_timer_timeout"]
